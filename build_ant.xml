<!DOCTYPE project> <!-- For Eclipse -->
<project name="Gorilla" default="update_local" basedir=".">
    <description>Ant Build File for Joomla! extensions</description>
 
    <!-- The name of your extension's main XML file -->
    <property name="cfg.name" value="gorilla" />
    <!-- Prefix, eg com, bot, mod, or a brand name (or empty) -->
    <property name="cfg.prefix" value="com_" />
    <!-- Relative path to your project -->
    <property name="cfg.dir" value="/home/rodrigo/git/Gorilla/com_gorilla" />
    <!-- Relative path to store the packages -->
    <property name="cfg.packages" value="/home/rodrigo/git/Gorilla/packages" />
    <!-- Absolute path to local server -->
    <property name="cfg.serverpath" value="/opt/lampp/htdocs/joomla_development/Joomla32" />
 
    <target name="init" >
        <xmlproperty file="${cfg.dir}/${cfg.name}.xml" collapseAttributes="true" prefix="xml" keepRoot="false" />
        <buildnumber/>
        <tstamp>
            <format property="TODAY" pattern="yyyy-MM-dd"/>
        </tstamp>
 
        <property name="str.version" value="_v${xml.version}.${build.number}" />
        <property name="str.destfile" value="${cfg.packages}/${cfg.prefix}${cfg.name}${str.version}_${TODAY}" />
        <property name="str.sitetrunkpath" value="${cfg.dir}/site" />
        <property name="str.admintrunkpath" value="${cfg.dir}/admin" />
        <property name="str.xmlfile" value="${cfg.dir}/${cfg.name}test.xml" />
    </target>
 
    <target name="info" depends="init" description="prints information">
        <echo message="${cfg.name} - ${str.version} - ${ant.version}" />
    </target>
 
    <target name="update_local" depends="info, init" description="attemps to update files on localhost server">
        <copy todir="${cfg.serverpath}/components/${cfg.prefix}${cfg.name}">
            <fileset dir="${str.sitetrunkpath}" excludes="/language/" />
        </copy>
        <copy todir="${cfg.serverpath}/language/">
            <fileset dir="${str.sitetrunkpath}/language/" />
        </copy>
        <copy todir="${cfg.serverpath}/administrator/components/${cfg.prefix}${cfg.name}">
            <fileset file="${cfg.dir}/${cfg.name}.xml" />
            <fileset dir="${str.admintrunkpath}" excludes="/language" />
        </copy>
        <copy todir="${cfg.serverpath}/administrator/language/">
            <fileset dir="${str.admintrunkpath}/language/" />
        </copy>
        <copy todir="${cfg.serverpath}/media/${cfg.prefix}${cfg.name}/">
    		<fileset dir="${cfg.dir}/media/" />
        </copy>
    </target>
 
    <target name="zip" depends="info" description="Makes an uploadable zip package">
        <mkdir dir="${cfg.packages}" />
        <zip
            destfile="${str.destfile}.zip"
            basedir="${cfg.dir}" />
    </target>
 
 
    <target name="build_xml" depends="info" description="builds an xml listing of all the files in trunk">
        <fileset id="site" dir="${str.sitetrunkpath}" />
        <echo message="${line.separator}&lt;files folder=&quot;site&quot;&gt;${line.separator}&lt;filename&gt;" file="${str.xmlfile}" append="false" />
        <echo-fileset filesetref="site" />
        <echo message="&lt;/filename&gt;${line.separator}&lt;/files&gt;${line.separator}" file="${str.xmlfile}" append="true" />
 
        <fileset id="admin" dir="${str.admintrunkpath}" />
        <echo message="${line.separator}&lt;files folder=&quot;admin&quot;&gt;${line.separator}&lt;filename&gt;" file="${str.xmlfile}" append="true" />
        <echo-fileset filesetref="admin" />
        <echo message="&lt;/filename&gt;${line.separator}&lt;/files&gt;${line.separator}" file="${str.xmlfile}" append="true" />
 
        <replace file="${str.xmlfile}" token="${str.sitetrunkpath}/" value="" />
        <replace file="${str.xmlfile}" token="${str.admintrunkpath}/" value="" />
    </target>
 
 
    <macrodef name="echo-fileset" description="creates a printable directory listing">
        <attribute name="filesetref" />
        <sequential>
            <pathconvert pathsep="&lt;/filename&gt;${line.separator}&lt;filename&gt;" property="@{filesetref}.echopath">
                <path>
                    <fileset refid="@{filesetref}" />
                </path>
            </pathconvert>
            <echo message="${@{filesetref}.echopath}" file="${str.xmlfile}" append="true" />
        </sequential>
    </macrodef>
 
</project>